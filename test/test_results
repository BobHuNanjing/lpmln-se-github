Answer: 33
satisfy(there_model,negative_body(2)) satisfy(there_model,negative_body(3)) satisfy(there_model,negative_body(4)) satisfy(there_model,negative_body(5)) satisfy(there_model,negative_body(6)) satisfy(there_model,body(2)) satisfy(there_model,body(3)) satisfy(there_model,body(4)) satisfy(there_model,body(5)) satisfy(there_model,body(6)) satisfy(here_model,body(2)) satisfy(here_model,body(3)) satisfy(here_model,body(4)) satisfy(here_model,body(5)) satisfy(here_model,body(6)) satisfy(here_model,positive_body(6)) satisfy(there_model,positive_body(6)) satisfy(here_model,positive_body(5)) satisfy(there_model,positive_body(5)) satisfy(here_model,positive_body(4)) satisfy(there_model,positive_body(4)) satisfy(here_model,positive_body(3)) satisfy(there_model,positive_body(3)) satisfy(here_model,positive_body(2)) satisfy(there_model,positive_body(2)) satisfy(here_model,negative_body(6)) satisfy(here_model,negative_body(5)) satisfy(here_model,negative_body(4)) satisfy(here_model,negative_body(3)) satisfy(here_model,negative_body(2)) -satisfy(there_model,head(2)) -satisfy(there_model,head(3)) -satisfy(there_model,head(4)) -satisfy(there_model,head(5)) -satisfy(there_model,head(6)) -satisfy(here_model,head(2)) -satisfy(here_model,head(3)) -satisfy(here_model,head(4)) -satisfy(here_model,head(5)) -satisfy(here_model,head(6)) -satisfy(there_model,program((1,original))) -satisfy(there_model,program((2,original))) satisfy(there_model,program((2,reduced))) -satisfy(here_model,program((1,original))) -satisfy(here_model,program((2,original))) satisfy(here_model,program((2,reduced))) -satisfy(here_model,rule(2)) -satisfy(here_model,rule(3)) -satisfy(there_model,rule(6)) -satisfy(there_model,rule(5)) -satisfy(there_model,rule(4)) -satisfy(there_model,rule(3)) -satisfy(there_model,rule(2)) -satisfy(here_model,rule(6)) -satisfy(here_model,rule(5)) -satisfy(here_model,rule(4)) -satisfy(here_model,program((1,reduced))) reduced_rule(1) satisfy(there_model,program((1,reduced))) satisfy(there_model,rule(1)) -satisfy(here_model,rule(1)) satisfy(there_model,negative_body(1)) satisfy(there_model,head(1)) -satisfy(here_model,head(1)) satisfy(there_model,body(1)) satisfy(here_model,body(1)) satisfy(here_model,positive_body(1)) satisfy(there_model,positive_body(1)) satisfy(here_model,negative_body(1)) non_equivalent(program((2,original)),program((1,original)))
Answer: 34
satisfy(there_model,negative_body(2)) satisfy(there_model,negative_body(3)) satisfy(there_model,negative_body(4)) satisfy(there_model,negative_body(5)) satisfy(there_model,negative_body(6)) satisfy(there_model,body(2)) satisfy(there_model,body(3)) satisfy(there_model,body(4)) satisfy(there_model,body(5)) satisfy(there_model,body(6)) satisfy(here_model,body(2)) satisfy(here_model,body(3)) satisfy(here_model,body(4)) satisfy(here_model,body(5)) satisfy(here_model,body(6)) satisfy(here_model,positive_body(6)) satisfy(there_model,positive_body(6)) satisfy(here_model,positive_body(5)) satisfy(there_model,positive_body(5)) satisfy(here_model,positive_body(4)) satisfy(there_model,positive_body(4)) satisfy(here_model,positive_body(3)) satisfy(there_model,positive_body(3)) satisfy(here_model,positive_body(2)) satisfy(there_model,positive_body(2)) satisfy(here_model,negative_body(6)) satisfy(here_model,negative_body(5)) satisfy(here_model,negative_body(4)) satisfy(here_model,negative_body(3)) satisfy(here_model,negative_body(2)) -satisfy(there_model,head(2)) -satisfy(there_model,head(3)) -satisfy(there_model,head(4)) -satisfy(there_model,head(5)) -satisfy(there_model,head(6)) -satisfy(here_model,head(2)) -satisfy(here_model,head(3)) -satisfy(here_model,head(4)) -satisfy(here_model,head(5)) -satisfy(here_model,head(6)) -satisfy(there_model,program((1,original))) -satisfy(there_model,program((2,original))) satisfy(there_model,program((2,reduced))) -satisfy(here_model,program((1,original))) -satisfy(here_model,program((2,original))) satisfy(here_model,program((2,reduced))) -satisfy(here_model,rule(2)) -satisfy(here_model,rule(3)) -satisfy(there_model,rule(6)) -satisfy(there_model,rule(5)) -satisfy(there_model,rule(4)) -satisfy(there_model,rule(3)) -satisfy(there_model,rule(2)) -satisfy(here_model,rule(6)) -satisfy(here_model,rule(5)) -satisfy(here_model,rule(4)) -satisfy(here_model,program((1,reduced))) reduced_rule(1) satisfy(there_model,program((1,reduced))) satisfy(there_model,rule(1)) -satisfy(here_model,rule(1)) satisfy(there_model,negative_body(1)) -satisfy(there_model,body(1)) satisfy(there_model,head(1)) -satisfy(here_model,head(1)) satisfy(here_model,body(1)) satisfy(here_model,positive_body(1)) satisfy(here_model,negative_body(1)) -satisfy(there_model,positive_body(1)) non_equivalent(program((2,original)),program((1,original)))
Answer: 35
satisfy(there_model,negative_body(2)) satisfy(there_model,negative_body(3)) satisfy(there_model,negative_body(4)) satisfy(there_model,negative_body(5)) satisfy(there_model,negative_body(6)) satisfy(there_model,body(2)) satisfy(there_model,body(3)) satisfy(there_model,body(4)) satisfy(there_model,body(5)) satisfy(there_model,body(6)) satisfy(here_model,body(2)) satisfy(here_model,body(3)) satisfy(here_model,body(4)) satisfy(here_model,body(5)) satisfy(here_model,body(6)) satisfy(here_model,positive_body(6)) satisfy(there_model,positive_body(6)) satisfy(here_model,positive_body(5)) satisfy(there_model,positive_body(5)) satisfy(here_model,positive_body(4)) satisfy(there_model,positive_body(4)) satisfy(here_model,positive_body(3)) satisfy(there_model,positive_body(3)) satisfy(here_model,positive_body(2)) satisfy(there_model,positive_body(2)) satisfy(here_model,negative_body(6)) satisfy(here_model,negative_body(5)) satisfy(here_model,negative_body(4)) satisfy(here_model,negative_body(3)) satisfy(here_model,negative_body(2)) -satisfy(there_model,head(2)) -satisfy(there_model,head(3)) -satisfy(there_model,head(4)) -satisfy(there_model,head(5)) -satisfy(there_model,head(6)) -satisfy(here_model,head(2)) -satisfy(here_model,head(3)) -satisfy(here_model,head(4)) -satisfy(here_model,head(5)) -satisfy(here_model,head(6)) -satisfy(there_model,program((1,original))) -satisfy(there_model,program((2,original))) satisfy(there_model,program((2,reduced))) -satisfy(here_model,program((1,original))) -satisfy(here_model,program((2,original))) satisfy(here_model,program((2,reduced))) -satisfy(here_model,rule(2)) -satisfy(here_model,rule(3)) -satisfy(there_model,rule(6)) -satisfy(there_model,rule(5)) -satisfy(there_model,rule(4)) -satisfy(there_model,rule(3)) -satisfy(there_model,rule(2)) -satisfy(here_model,rule(6)) -satisfy(here_model,rule(5)) -satisfy(here_model,rule(4)) -satisfy(here_model,program((1,reduced))) reduced_rule(1) satisfy(there_model,program((1,reduced))) satisfy(there_model,rule(1)) -satisfy(here_model,rule(1)) satisfy(there_model,negative_body(1)) -satisfy(there_model,body(1)) -satisfy(there_model,head(1)) -satisfy(here_model,head(1)) satisfy(here_model,body(1)) satisfy(here_model,positive_body(1)) satisfy(here_model,negative_body(1)) -satisfy(there_model,positive_body(1)) non_equivalent(program((2,original)),program((1,original)))
